{
  "type": "File",
  "start": 0,
  "end": 621,
  "loc": {
    "start": {
      "line": 1,
      "column": 0
    },
    "end": {
      "line": 38,
      "column": 0
    }
  },
  "program": {
    "type": "Program",
    "start": 0,
    "end": 621,
    "loc": {
      "start": {
        "line": 1,
        "column": 0
      },
      "end": {
        "line": 38,
        "column": 0
      }
    },
    "sourceType": "module",
    "body": [
      {
        "type": "ExportNamedDeclaration",
        "start": 0,
        "end": 620,
        "loc": {
          "start": {
            "line": 1,
            "column": 0
          },
          "end": {
            "line": 37,
            "column": 2
          }
        },
        "specifiers": [],
        "source": null,
        "declaration": {
          "type": "VariableDeclaration",
          "start": 7,
          "end": 620,
          "loc": {
            "start": {
              "line": 1,
              "column": 7
            },
            "end": {
              "line": 37,
              "column": 2
            }
          },
          "declarations": [
            {
              "type": "VariableDeclarator",
              "start": 13,
              "end": 619,
              "loc": {
                "start": {
                  "line": 1,
                  "column": 13
                },
                "end": {
                  "line": 37,
                  "column": 1
                }
              },
              "id": {
                "type": "Identifier",
                "start": 13,
                "end": 26,
                "loc": {
                  "start": {
                    "line": 1,
                    "column": 13
                  },
                  "end": {
                    "line": 1,
                    "column": 26
                  },
                  "identifierName": "requiredTypes"
                },
                "name": "requiredTypes"
              },
              "init": {
                "type": "TemplateLiteral",
                "start": 29,
                "end": 619,
                "loc": {
                  "start": {
                    "line": 1,
                    "column": 29
                  },
                  "end": {
                    "line": 37,
                    "column": 1
                  }
                },
                "expressions": [],
                "quasis": [
                  {
                    "type": "TemplateElement",
                    "start": 30,
                    "end": 618,
                    "loc": {
                      "start": {
                        "line": 1,
                        "column": 30
                      },
                      "end": {
                        "line": 37,
                        "column": 0
                      }
                    },
                    "value": {
                      "raw": "\n\n  interface Node {\n    # the creation Date and Time of a node\n    createdAt: Float!\n  }\n\n  interface Edge {\n    # cursor containing an createdAt\n    cursor: Float!\n\n    # node containing data of a type\n    node: Node\n  }\n\n  interface Connection {\n    # edges\n    edges: [Edge]\n\n    # information for previous or next pages\n    pageInfo: PageInfo\n  }\n\n  type PageInfo {\n    # no previous page available\n    hasPreviousPage: Boolean!\n\n    # no next page available\n    hasNextPage: Boolean!\n  }\n  \n  extend type Query {\n    # An entity in the schema\n    node(createdAt: Float!): Node\n  }\n\n",
                      "cooked": "\n\n  interface Node {\n    # the creation Date and Time of a node\n    createdAt: Float!\n  }\n\n  interface Edge {\n    # cursor containing an createdAt\n    cursor: Float!\n\n    # node containing data of a type\n    node: Node\n  }\n\n  interface Connection {\n    # edges\n    edges: [Edge]\n\n    # information for previous or next pages\n    pageInfo: PageInfo\n  }\n\n  type PageInfo {\n    # no previous page available\n    hasPreviousPage: Boolean!\n\n    # no next page available\n    hasNextPage: Boolean!\n  }\n  \n  extend type Query {\n    # An entity in the schema\n    node(createdAt: Float!): Node\n  }\n\n"
                    },
                    "tail": true
                  }
                ]
              }
            }
          ],
          "kind": "const",
          "leadingComments": [],
          "trailingComments": []
        },
        "exportKind": "value"
      }
    ],
    "directives": []
  },
  "comments": [],
  "tokens": [
    {
      "type": {
        "label": "export",
        "keyword": "export",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "export",
      "start": 0,
      "end": 6,
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 1,
          "column": 6
        }
      }
    },
    {
      "type": {
        "label": "const",
        "keyword": "const",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "const",
      "start": 7,
      "end": 12,
      "loc": {
        "start": {
          "line": 1,
          "column": 7
        },
        "end": {
          "line": 1,
          "column": 12
        }
      }
    },
    {
      "type": {
        "label": "name",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "value": "requiredTypes",
      "start": 13,
      "end": 26,
      "loc": {
        "start": {
          "line": 1,
          "column": 13
        },
        "end": {
          "line": 1,
          "column": 26
        }
      }
    },
    {
      "type": {
        "label": "=",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": true,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "=",
      "start": 27,
      "end": 28,
      "loc": {
        "start": {
          "line": 1,
          "column": 27
        },
        "end": {
          "line": 1,
          "column": 28
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 29,
      "end": 30,
      "loc": {
        "start": {
          "line": 1,
          "column": 29
        },
        "end": {
          "line": 1,
          "column": 30
        }
      }
    },
    {
      "type": {
        "label": "template",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "value": "\n\n  interface Node {\n    # the creation Date and Time of a node\n    createdAt: Float!\n  }\n\n  interface Edge {\n    # cursor containing an createdAt\n    cursor: Float!\n\n    # node containing data of a type\n    node: Node\n  }\n\n  interface Connection {\n    # edges\n    edges: [Edge]\n\n    # information for previous or next pages\n    pageInfo: PageInfo\n  }\n\n  type PageInfo {\n    # no previous page available\n    hasPreviousPage: Boolean!\n\n    # no next page available\n    hasNextPage: Boolean!\n  }\n  \n  extend type Query {\n    # An entity in the schema\n    node(createdAt: Float!): Node\n  }\n\n",
      "start": 30,
      "end": 618,
      "loc": {
        "start": {
          "line": 1,
          "column": 30
        },
        "end": {
          "line": 37,
          "column": 0
        }
      }
    },
    {
      "type": {
        "label": "`",
        "beforeExpr": false,
        "startsExpr": true,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null
      },
      "start": 618,
      "end": 619,
      "loc": {
        "start": {
          "line": 37,
          "column": 0
        },
        "end": {
          "line": 37,
          "column": 1
        }
      }
    },
    {
      "type": {
        "label": ";",
        "beforeExpr": true,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 619,
      "end": 620,
      "loc": {
        "start": {
          "line": 37,
          "column": 1
        },
        "end": {
          "line": 37,
          "column": 2
        }
      }
    },
    {
      "type": {
        "label": "eof",
        "beforeExpr": false,
        "startsExpr": false,
        "rightAssociative": false,
        "isLoop": false,
        "isAssign": false,
        "prefix": false,
        "postfix": false,
        "binop": null,
        "updateContext": null
      },
      "start": 621,
      "end": 621,
      "loc": {
        "start": {
          "line": 38,
          "column": 0
        },
        "end": {
          "line": 38,
          "column": 0
        }
      }
    }
  ]
}